{"version":3,"file":"static/js/130.2dd0d8e8.chunk.js","mappings":"kUAEAA,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,sGAGrBF,IAAAA,IAAA,6CAAgDC,IAH3B,uBAErBE,EAFqB,EAE7BC,KAAQD,QAFqB,kBAIxBA,GAJwB,2CAAH,qDAOjBE,EAAS,mCAAG,WAAMC,GAAN,yFAGbN,IAAAA,IAAA,gCACiBC,EADjB,kBACkCK,EADlC,yBAHa,uBAEbH,EAFa,EAErBC,KAAQD,QAFa,kBAMhBA,GANgB,2CAAH,sDASTI,EAAe,mCAAG,WAAMC,GAAN,yFACGR,IAAAA,IAAA,iBACpBQ,EADoB,oBACDP,IAFF,uBACfE,EADe,EACrBC,KADqB,kBAItBD,GAJsB,2CAAH,sDAOfM,EAAO,mCAAG,WAAMD,GAAN,yFAGXR,IAAAA,IAAA,iBAAoBQ,EAApB,4BAA+CP,IAHpC,uBAEXS,EAFW,EAEnBN,KAAQM,KAFW,kBAIdA,GAJc,2CAAH,sDAOPC,EAAU,mCAAG,WAAMH,GAAN,yFAGdR,IAAAA,IAAA,iBAAoBQ,EAApB,4BAA+CP,IAHjC,uBAEdE,EAFc,EAEtBC,KAAQD,QAFc,kBAIjBA,GAJiB,2CAAH,uD,oHClCvB,GAAgB,WAAa,4BAA4B,WAAa,4BAA4B,iBAAmB,mC,SCEtG,SAASS,EAAT,GAA6B,IAAXC,EAAU,EAAVA,QAC7B,OACI,8BACGA,GAA8B,IAAnBA,EAAQC,QAClB,eAAIC,UAAWC,EAAAA,WAAf,SACKH,EAAQI,KAAI,SAAAC,GAAM,OACnB,gBAAoBH,UAAWC,EAAAA,WAA/B,WACI,cAAGD,UAAWC,EAAAA,aAAd,UAAmC,yBAAIE,EAAOC,OAAX,UACnC,cAAGJ,UAAWC,EAAAA,WAAd,SAAmCE,EAAOE,QAASN,OAAS,GAAMI,EAAOE,QAASC,MAAM,EAAG,KAAKC,OAAO,QAAUJ,EAAOE,WACxH,wBAAG,cAAGG,KAAML,EAAOM,IAAKC,OAAO,SAASC,IAAI,sBAAzC,2BAHER,EAAOS,UAMpB,cAAGZ,UAAWC,EAAAA,iBAAd,wCCVL,SAASY,IACd,IAAQpB,GAAYqB,EAAAA,EAAAA,MAAZrB,QACR,GAA8BsB,EAAAA,EAAAA,UAAS,MAAvC,eAAOjB,EAAP,KAAgBkB,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRrB,EAAAA,EAAAA,IAAWH,GAASyB,KAAKF,KACxB,CAACvB,KAGF,SAAC,EAAA0B,SAAD,CAAUC,UAAU,wCAApB,UACE,SAACvB,EAAD,CAASC,QAASA","sources":["services/themoviedb-api.js","webpack://react-homework-5-pysarenko/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","views/ReviewsSubpage.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'd01b93f6037a4d1c509361675c1b2760';\n\nexport const getTrendingMovies = async () => {\n  const {\n    data: { results },\n  } = await axios.get(`/trending/movie/day?page=1&api_key=${API_KEY}`);\n  return results;\n};\n\nexport const getMovies = async query => {\n  const {\n    data: { results },\n  } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false`\n  );\n  return results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data: results } = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return results;\n};\n\nexport const getCast = async movieId => {\n  const {\n    data: { cast },\n  } = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n  return cast;\n};\n\nexport const getReviews = async movieId => {\n  const {\n    data: { results },\n  } = await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n  return results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"reviewList\":\"Reviews_reviewList__uMBar\",\"reviewItem\":\"Reviews_reviewItem__ax7Fo\",\"reviewsListEmpty\":\"Reviews_reviewsListEmpty__OnlvE\"};","import PropTypes from 'prop-types';\nimport styles from './Reviews.module.css';\n\nexport default function Reviews({reviews}) {\n    return (\n        <>\n          {reviews && reviews.length !== 0 ? \n            <ul className={styles.reviewList}> \n                {reviews.map(review => \n                <li key={review.id} className={styles.reviewItem}>\n                    <p className={styles.reviewAuthor}><b>{review.author}:</b></p>\n                    <p className={styles.reviewText}>{(review.content).length > 50 ? (review.content).slice(0, 250).concat(\" ...\") : review.content}</p>\n                    <p><a href={review.url} target=\"_blank\" rel=\"noopener noreferrer\">Read more</a></p>\n                </li>)}\n            </ul> : \n            <p className={styles.reviewsListEmpty}>There are no reviews yet</p>}\n        </>\n    );\n}\n\nReviews.propTypes = {\n    reviews: PropTypes.arrayOf(PropTypes.object),\n}","import { useState, useEffect, Suspense } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from '../services/themoviedb-api';\nimport Reviews from '../components/Reviews/Reviews';\n\nexport function ReviewsSubpage() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    getReviews(movieId).then(setReviews);\n  }, [movieId]);\n\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <Reviews reviews={reviews} />\n    </Suspense>\n  );\n}\n"],"names":["axios","API_KEY","getTrendingMovies","results","data","getMovies","query","getMovieDetails","movieId","getCast","cast","getReviews","Reviews","reviews","length","className","styles","map","review","author","content","slice","concat","href","url","target","rel","id","ReviewsSubpage","useParams","useState","setReviews","useEffect","then","Suspense","fallback"],"sourceRoot":""}