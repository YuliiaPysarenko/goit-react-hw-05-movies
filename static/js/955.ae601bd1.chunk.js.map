{"version":3,"file":"static/js/955.ae601bd1.chunk.js","mappings":"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","sources":["webpack://react-homework-5-pysarenko/./src/components/Heading/Heading.module.css?4d39","components/Heading/Heading.jsx","webpack://react-homework-5-pysarenko/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","services/themoviedb-api.js","webpack://react-homework-5-pysarenko/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.jsx","../node_modules/nanoid/index.browser.js","views/MoviesPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"heading\":\"Heading_heading__f8N4J\"};","import PropTypes from 'prop-types';\nimport styles from './Heading.module.css';\n\nexport default function Heading({title}) {\n    return <h1 className={styles.heading}>{title}</h1>;\n}\n\nHeading.propTypes = {\n    title: PropTypes.string,\n}","// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"MoviesList_moviesList__P6SP5\",\"movie\":\"MoviesList_movie__gS8QL\",\"movieLink\":\"MoviesList_movieLink__QlD4H\",\"movieImage\":\"MoviesList_movieImage__xaeaC\",\"movieTitle\":\"MoviesList_movieTitle__CxO8p\"};","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styles from './MoviesList.module.css';\n\nexport default function MoviesList({ movies }) {\n    return (\n    <ul className={styles.moviesList}>\n        {movies.map(movie => \n        <li key={movie.id} className={styles.movie}>\n            <Link to={`/movies/${movie.id}`} className={styles.movieLink}>\n                {movie.poster_path ?\n                <img src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} alt={movie.title}  className={styles.movieImage} width=\"250\" /> :\n                <img src=\"https://github.com/YuliiaPysarenko/media-files/raw/48e3b1ccd5838f7e4a04767b8d601692c13357bc/default_poster.jpg\" alt={movie.title}  className={styles.movieImage} width=\"250\" />}\n                <p className={styles.movieTitle}>{movie.title}</p>\n            </Link>\n        </li>)}\n    </ul>\n    )\n}\n\nMoviesList.propTypes = {\n    movies: PropTypes.arrayOf(PropTypes.object),\n}","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'd01b93f6037a4d1c509361675c1b2760';\n\nexport const getTrendingMovies = async () => {\n  const {\n    data: { results },\n  } = await axios.get(`/trending/movie/day?page=1&api_key=${API_KEY}`);\n  return results;\n};\n\nexport const getMovies = async query => {\n  const {\n    data: { results },\n  } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false`\n  );\n  return results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data: results } = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return results;\n};\n\nexport const getCast = async movieId => {\n  const {\n    data: { cast },\n  } = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n  return cast;\n};\n\nexport const getReviews = async movieId => {\n  const {\n    data: { results },\n  } = await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n  return results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Searchbar\":\"Searchbar_Searchbar__5WKzV\",\"SearchForm\":\"Searchbar_SearchForm__XuPyK\",\"SearchFormButton\":\"Searchbar_SearchFormButton__dksRa\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__7AAWA\",\"SearchFormInput\":\"Searchbar_SearchFormInput__FT6Bx\",\"icon\":\"Searchbar_icon__2A9yR\"};","import { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Searchbar.module.css\";\n\nexport default function Searchbar(props) {\n  const [searchRequest, setSearchRequest] = useState(\"\");\n  const searchInputId = nanoid();\n\n  const handleChange = (e) => {\n    setSearchRequest(e.target.value);\n  };\n\n  const reset = () => {\n    setSearchRequest(\"\");\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.onSubmit(searchRequest);\n    reset();\n  };\n\n  return (\n    <div className={styles.Searchbar}>\n      <form className={styles.SearchForm} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={styles.SearchFormButton}>\n          <span className={styles.SearchFormButtonLabel}>Search</span>\n          <svg width=\"30\" height=\"30\" className={styles.icon} viewBox=\"0 0 32 32\">\n            <path d=\"M31.008 27.231l-7.58-6.447c-0.784-0.705-1.622-1.029-2.299-0.998 1.789-2.096 2.87-4.815 2.87-7.787 0-6.627-5.373-12-12-12s-12 5.373-12 12 5.373 12 12 12c2.972 0 5.691-1.081 7.787-2.87-0.031 0.677 0.293 1.515 0.998 2.299l6.447 7.58c1.104 1.226 2.907 1.33 4.007 0.23s0.997-2.903-0.23-4.007zM12 20c-4.418 0-8-3.582-8-8s3.582-8 8-8 8 3.582 8 8-3.582 8-8 8z\"></path>\n          </svg>\n        </button>\n\n        <input\n          value={searchRequest}\n          id={searchInputId}\n          onChange={handleChange}\n          className={styles.SearchFormInput}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Looking for any movie? :)\"\n        />\n      </form>\n    </div>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n}","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import { useState, useEffect, Suspense } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport Heading from '../components/Heading/Heading';\nimport Searchbar from '../components/Searchbar/Searchbar';\nimport MoviesList from '../components/MoviesList/MoviesList';\nimport { getMovies } from '../services/themoviedb-api';\n\nexport function MoviesPage() {\n  let [request, setRequest] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams({});\n  const [movies, setMovies] = useState(null);\n\n  const submitRequest = keyword => {\n    setRequest(keyword);\n  };\n\n  useEffect(() => {\n    const queryValue = searchParams.get(\"query\");\n    if (queryValue) {\n      setRequest(queryValue);\n    }\n  }, [searchParams]);\n\n  useEffect(() => {\n    if (request) {\n      setSearchParams({ query: request });\n      getMovies(request).then(setMovies);\n    }\n  }, [request, setSearchParams]);\n\n  return (\n    <>\n      <Heading title=\"Movies\" />\n      <Searchbar onSubmit={submitRequest} />\n      {movies && (\n        <Suspense fallback={<div>Loading...</div>}>\n          {movies.length > 0 ? (\n            <MoviesList movies={movies} />\n          ) : (\n            <div className=\"notFound__notification\">\n              <p className=\"notFound__text\">\n                Unfortunately, we didn't find anything.\n                <br /> Try again by entering similar words\n              </p>\n            </div>\n          )}\n        </Suspense>\n      )}\n    </>\n  );\n}\n"],"names":["Heading","title","className","styles","MoviesList","movies","map","movie","to","id","poster_path","src","alt","width","axios","API_KEY","getTrendingMovies","results","data","getMovies","query","getMovieDetails","movieId","getCast","cast","getReviews","Searchbar","props","useState","searchRequest","setSearchRequest","searchInputId","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","onSubmit","e","preventDefault","type","height","viewBox","d","value","onChange","target","autoComplete","autoFocus","placeholder","MoviesPage","request","setRequest","useSearchParams","searchParams","setSearchParams","setMovies","useEffect","queryValue","get","then","keyword","Suspense","fallback","length"],"sourceRoot":""}